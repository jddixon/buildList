~/dev/py/buildList/TODO

2018-01-27
    * document blake2b support
    * add blake2b options to bl_{check,createtestdata1,srcgen}
    * drop bl_bootstrap
2017-09-02
    * need to rm -rf tmp/* before test.all and/or tox
    * inexplicable 404 linking https://github.com/jddixon/xl_testData

2017-06-02
    * test_timestamp.py doesn't test that at all; rename or drop.
2017-03-17
    * BLParseFailed etc should subclass BLError
2017-02-09
    * implement the logic for BuildList.list_gen where using_indir
    * add SHA3 to hashtypes in test_populate_data_dir.py
        - this requires a data dir built using SHA3
    * test_timestamp.py ... doesn't.  It verifies that u.sha1hex()
        returns the correct value.  
2017-02-04
    * bl_listgen acquires a new option -I/--using_indir.  Defaults to
        False.  In either case before posting a file we hash it and 
        then verify it is not present in UDir at uPpath.  If False, we 
        write new entries to UDir at u_path.

2017-01-18
    * buildlist/__init__.py accept_content_line is largely stubbed
    * package files need much more pylinting

2017-01-11
    * bl_srcgen has hashtype fixed to SHA1.  Surely this is an error!

2016-12-02
    * {generate,read}_rsa_key() should be in xlattice.crypto

2016-11-28
    * rm_f_dir_contents() must be tested: it had a fatal bug that
        was't caught here
    * in any case should be moved to eg xlattice/lfs

2016-11-19, edited from -18
    * 404: buildlist.html should be buildList.html                      * FIXED
    * bl_createtestdata1 should create under ~/dev/py/xl_testData:
        - SHA{1,2,3}
            * NLHTree for each
            * BuildList and hex hash for each
            * MerkleTree and hex hash for each
            * DIR{_FLAT,16x16,256x256}
                - uDir for SHA and dirstruc

        - IMPORTANT: additions to this test set must always leave the 
            earlier contents of dataDir/ and node/ intact
            * that is, createtestdata1 must be modified to only ADD
                to dataDir, retaining all earlier entries
    * modify createtestdata1 to allow expansion of dataDir/
        - node/ and existing data files should be left untouched
            unless -f/--force 
        - option should allow specifying target number N of data files 
            in leaf dir if DIR16x16 or DIR256x256, otherwise in top dir
            * for each of SHA{1,2,3} x DIR{_FLAT,16x16,256x256}

2016-11-19, edited from -17
    * bl_check needs to be tested (it had an error which had not been
        caught)
        - write script which makes the 9 possible bl_check runs
            against ../../dat/xl_testData files
    * bl_check -h says that datadir is optional, but sanity checks
        require its presence
    * test messages are too verbose

2016-11-05
    * markdown is mangling section headings in github.io, converting    * FIXED
        python names like bl_boot_strap into bl + ITALICS(boot) +       * FIXED
        strap.                                                          * FIXED
        - this will be a common result of PEP8-izing program names      * FIXED
        - this particular case can be fixed by treating 'bootstrap'     * FIXED
            as a single word -- as it should be                         * FIXED

2016-11-04
    * README.md needs to be corrected for utilities                     * DONE
    * test_populate_data_dir fails because of dataDir incorrectly       * FIXED
        called data_dir (under example{1,2,3})                          * FIXED

2016-10-22, confirmed -11-01
    * test_populate_data_dir shows that round-tripping the 
        serialized BuildList doesn't work; the copy is signed but
        the dig sig is not picked up.

2016-10-22
    * test_build_list.py roundtrip test in do_build_test()
        compares the serialization of NLHTree part of two build lists,  
        should also check pubKey, title, and time, and verify the
        digSig on each.
2016-10-21
    * package renamed to buildlist                                      * DONE
    * BuildList.to_strings() should use strings.extend() to add
        serialized NLHTree 

2016-10-15
    * index.md command summaries are out of date                        * FIXED

2016-09-19
    * Need a function BuildList.documentHash() which returns the 
        usingSHA hash of the pubkey and the title (so that all versions 
        of the BuildList will have the same hash, but are differentiated 
        by their timestamp).   This needs to be brought in line with the 
        Java version, SignedList.getHash(), and the Go version, 
        SignedBList.GetHash()

2016-09-13
    * need to clear up the confusion: the digital signature on  
        BuildList must always use SHA1, but must the BuildList do so
        otherwise?                                                      * NO
    * should the usingSHA option be part of the BuildList object?       * YES
        - ah! but there is currently :qno way to serialize this

2016-09-11
    * checkUPath needs some refinement: used in blCheck, blListGen,
        blSrcGen

2016-08-09
    * running blCheck on example1 returns 'incompatible SHA types'      * FIXED

2016-08-06
    * verify that command line formats specified in index.md are       * DONE
        current                                                         * DONE

2016-07-18
    * fix bug in listGen(): failed to discover() uDir, so assumed       * DONE
        flat when inserting BuildList                                   * DONE

2016-07-18 (edited from -15)
    * write blDropFromU -b PATH_TO_BUILDLIST -u PATH_TO_U and
        __thoroughly test it__ 
        - blDrop should use the lower-level nlhTree function
        - remember to drop the buildList itself
            * this is a DANGEROUS operation: we will generally want
                to drop only changes from a previous buildList

2016-06-21
    * implement BuildList.populateDataDir(uDir, pathToDataDir)          * DONE
    * write tests                                                       * DONE

2016-06-15
    * the code specific to blBootstrap should be in __init__.py         * SKIP
        - preferably with code requiring manual confirmation            * DONE

2016-06-14
    * blListGen reporting problems writing BuildList to U, although     * FIXED
        it seems to get there                                           * FIXED
        - need to verify that lastBuildList and its contents are in U
            * if necessary, catch exception, print stacktrace,
                hash .dvcz/lastBuildGen to get its key, verify that
                is in U, then parse it and verify the listed files 
                are in U
    * BuildList.listGen 
        - it appears that references to uDir should be uPath            * FIXED
        - use of u.copyAndPrint1, u.copyAntPrint2,                      * FIXED
            * where u is xlattice.u                                     * FIXED
    * BuildList.verify makes use of _getBuildListSHA1(), which is
        probably correct but needs to be checked
    * BuildList.acceptContentLine() seems questionable, never used
    * buildList/__init__.py aroundL 565 must create uDir from uPath     * FIXED

2016-06-03
    * modify to use xlattice.u.UDir                                     * DONE

2016-05-25
    * need -X/--exclusions option                                       * DONE
    * checkExample should be in test.all

2016-05-18
    * documentation is out of date and incomplete
        - claimed beta status is not warranted by state of code
    * should add version number to .dvcz/builds, making it              * DONE
        '$TIMESTAMP $VERSION $HASH'                                     * DONE

2016-05-17
    * URGENT: blCheck needs a -i argument, defaulting to .gitignore     * DONE
        - and calculate exRE                                            * DONE
   
2016-05-09
    * move BuildList.copyWalk() to NLHTree, where it more logically     * DONE
        belongs                                                         * DONE
        - write a test 
    * move BuildList.checkWalk() to NLHTree, where it more logically    * DONE
        belongs                                                         * DONE
        - write a test 

2016-05-06
    * blListGen should have -X/--exclusions as well as .gitinore
    * blSrcGen will also need -X/--exclusions
    * need test that calls both makeBuildList and makeDataDir
        - make buildList and populate uDir under tmp
        - use these and makeDataDir() to recreate the dataDir,
            also under tmp/

2016-05-02
    * add clone() functions
        - and tests

2016-04-11, edited from -03-31
     * confirm that -X works on regexes instead of wildcards            * FALSE

2016-03-31
    * BUG: blCheck -1b example/example.bld -r example/dataDir \			* FIXED
            -u example/uDir			                                    * FIXED
      FAILS because NLHTree is missing first line (^dataDir\n)			* FIXED
        - that is, the first line is blank			                    * FIXED

    * URGENT: blSrcGen logic is stubbed!
    * move blCheck logic into buildList/__init__.py as checkBuildList
    * move blListGen makeListing into buildList/__init__.py
        as genBuildList(options)
    * write blSrcGen logic as restoreSrc(options), test, then move
        into buildList/__init__.py

2015-06-07
    * use LF for line ending, not CRLF                                  * YEP

2015-06-02
    * ERRORS in documentation relating to NLHTree                       * FIXED
        - names are on left, hash is on right                           * YEP
        _ hashes are hex-encoded, not base64                            * YEP
    * README/index.md should contain a link to NLHTree project          * DONE

2015-05-25
    * complete testRandomDir.py or drop it                              * DONE
    * use NLHTree instead of BuildList for body os the list             * DONE
    * FIX: blListGen ignores uDir if set

2015-05-12
    * get blSrcGen working using checkBlSrcGen

2015-05-12 (edited from -11)
    * if uDir != None (ie, -u is present), blListGen should create 
        uDir if it does not exist and then should invoke 
        BuildList.copyWalk(dataDir, uDir)
        - then BuildList.checkWalk() must succeed
        - it should be OK if uDir already exists (in fact this
            will be the usual case)
    * write checkExample which uses blCheck to verify that the 
        buildList in example/example.bld is correct 
        - and that every file under dataDir is in example/uDir
        - (but not necessarily vice versa)

2015-05-05 (edited from 04-12)
    * move their doIt code into buildList/__init__.py
    * everything under example/ is read-only if at all possible
2015-05-04
    * createFromFileSystem: path must not contain . or .. parts
    * Python time.time() delivers microseconds, which we truncate
        - to retain, serialization must capture
    * IMPORTANT: need working -X/--exclude
        - must collect exclusions as list
        - must collect matchPats as list
2015-05-03
    * BuildList.__init__() needs sanity checks on parameters
2015-05-02
    * timestamp should be a 64-bit signed value representing seconds
        from the Epoch (nanoseconds?)
2015-04-27
    * class BuildList should extend SignedList
    * BuildList should be sorted by path to file, which should
        always be relative 
        - sort guarantees file uniqueness
        - forbid '/' as a leading character
        - forbid internal './' and '../' sequences
2015-04-15
    * need udir/ populated
2014-10-01
    * implement blListGen code to handle -u option and copy input 
        to uDir
