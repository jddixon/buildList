~/dev/py/buildList/TODO

2016-06-15
    * the code specific to blBootstrap shoud be in __init__.py
        - preferably with code requiring manual confirmation

2016-06-14
    * blListGen reporting problems writing BuildList to U, although
        it seems to get there
        - need to verify that lastBuildList and its contents are in U
            * if necessary, catch exception, print stacktrace,
                hash .dvcz/lastBuildGen to get its key, verify that
                is in U, then parse it and verify the listed files 
                are in U
    * BuildList.listGen 
        - it appears that references to uDir should be uPath
        - use of u.copyAndPrint1, u.copyAntPrint2,
            * where u is xlattice.u
    * BuildList.verify makes use of _getBuildListSHA1(), which is
        probably correct but needs to be checked
    * BuildList.acceptContentLine() seems questionable, never used
    * buildList/__init__.py aroundL 565 must create uDir from uPath

2016-06-03
    * modify to use xlattice.u.UDir

2016-05-25
    * need -X/--exclusions option                                       * DONE
    * checkExample should be in test.all

2016-05-18
    * documentation is out of date and incomplete
        - claimed beta status is not warranted by state of code
    * should add version number to .dvcz/builds, making it              * DONE
        '$TIMESTAMP $VERSION $HASH'                                     * DONE

2016-05-17
    * URGENT: blCheck needs a -i argument, defaulting to .gitignore     * DONE
        - and calculate exRE                                            * DONE
   
2016-05-09
    * move BuildList.copyWalk() to NLHTree, where it more logically     * DONE
        belongs                                                         * DONE
        - write a test 
    * move BuildList.checkWalk() to NLHTree, where it more logically    * DONE
        belongs                                                         * DONE
        - write a test 

2016-05-06
    * blListGen should have -X/--exclusions as well as .gitinore
    * blSrcGen will also need -X/--exclusions
    * need test that calls both makeBuildList and makeDataDir
        - make buildList and populate uDir under tmp
        - use these and makeDataDir() to recreate the dataDir,
            also under tmp/

2016-05-02
    * add clone() functions
        - and tests

2016-04-11, edited from -03-31
     * confirm that -X works on regexes instead of wildcards            * FALSE

2016-03-31
    * BUG: blCheck -1b example/example.bld -r example/dataDir \			* FIXED
            -u example/uDir			                                    * FIXED
      FAILS because NLHTree is missing first line (^dataDir\n)			* FIXED
        - that is, the first line is blank			                    * FIXED

    * URGENT: blSrcGen logic is stubbed!
    * move blCheck logic into buildList/__init__.py as checkBuildList
    * move blListGen makeListing into buildList/__init__.py
        as genBuildList(options)
    * write blSrcGen logic as restoreSrc(options), test, then move
        into buildList/__init__.py

2015-06-07
    * use LF for line ending, not CRLF                                  * YEP

2015-06-02
    * ERRORS in documentation relating to NLHTree                       * FIXED
        - names are on left, hash is on right                           * YEP
        _ hashes are hex-encoded, not base64                            * YEP
    * README/index.md should contain a link to NLHTree project          * DONE

2015-05-25
    * complete testRandomDir.py or drop it                              * DONE
    * use NLHTree instead of BuildList for body os the list             * DONE
    * FIX: blListGen ignores uDir if set

2015-05-12
    * get blSrcGen working using checkBlSrcGen

2015-05-12 (edited from -11)
    * if uDir != None (ie, -u is present), blListGen should create 
        uDir if it does not exist and then should invoke 
        BuildList.copyWalk(dataDir, uDir)
        - then BuildList.checkWalk() must succeed
        - it should be OK if uDir already exists (in fact this
            will be the usual case)
    * write checkExample which uses blCheck to verify that the 
        buildList in example/example.bld is correct 
        - and that every file under dataDir is in example/uDir
        - (but not necessarily vice versa)

2015-05-05 (edited from 04-12)
    * move their doIt code into buildList/__init__.py
    * everything under example/ is read-only if at all possible
2015-05-04
    * createFromFileSystem: path must not contain . or .. parts
    * Python time.time() delivers microseconds, which we truncate
        - to retain, serialization must capture
    * IMPORTANT: need working -X/--exclude
        - must collect exclusions as list
        - must collect matchPats as list
2015-05-03
    * BuildList.__init__() needs sanity checks on parameters
2015-05-02
    * timestamp should be a 64-bit signed value representing seconds
        from the Epoch (nanoseconds?)
2015-04-27
    * class BuildList should extend SignedList
    * BuildList should be sorted by path to file, which should
        always be relative 
        - sort guarantees file uniqueness
        - forbid '/' as a leading character
        - forbid internal './' and '../' sequences
2015-04-15
    * need udir/ populated
2014-10-01
    * implement blListGen code to handle -u option and copy input 
        to uDir
