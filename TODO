~/dev/py/buildList/TODO

2015-05-04
    * what is now BuildList.__init__() morphs into createFromFileSystem * DONE
        with the __init__() method acquiring a tree parameter           * DONE
    * need the usual serialization/deserialization tests, where the     * DONE
        buildList is first created from scratch, then written to        * DONE
        disk, then deserialized, and then the two objects are           * DONE
        tested for equality                                             * DONE
    * createFromFileSystem: path must not contain . or .. parts

    * XXX testBuildList fails, line 54
    * IMPORTANT: need working -X/--exclude

2015-05-03
    * BuildList.__init__() needs sanity checks on parameters
2015-05-02
    * timestamp should be a 64-bit signed value representing seconds
        from the Epoch (nanoseconds?)

2015-04-29
    * FIXME: old makeListing code doesnt' work because of casual 
        intermixing of strings and bytearrays
2015-04-27
    * data12 is missing (should be present but an empty file)           * FIXED
    * public key should be wrapped in a standard way in the 
        serialization
    * consider omitting CRLF and content delimiter lines when 
        calculating the digital signature

    * class BuildList should extend SignedList
    * BuildList should be sorted by path to file, which should
        always be relative 
        - sort guarantees file uniqueness
        - forbid '/' as a leading character
        - forbid internal './' and '../' sequences

2015-04-15
    * data12 should be empty but is being filled with random data       * FIXED
    * need node/ckPriv with serialized RSA private key                  * DONE
    * need a build list, example.bld
    * need udir/ populated

2015-04-12
    * recheck sanity checks in blCheck/ListGen/SrcGen                   * DONE
    * move their doIt code into buildList/__init__.py
    * for interoperability tests need 
        - a read-only directory example/
        - a valid buildList example/buildList.dat, 
        - a directory tree example/data/ 
        - an appropriate example/uDir/
        - and a node with its ID, ck/ckPriv, and sk/skPriv serialized 
            under example/.xlattice/
        - make sure buildList lines are CR-LF terminated
    * bin/bootStrap script creates all of this
    * everything under example/ is read-only if at all possible

2014-10-01
    * implement blListGen code to handle -u option and copy input 
        to uDir
